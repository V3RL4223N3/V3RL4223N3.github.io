<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>memory on Cloudware</title>
    <link>/tags/memory/</link>
    <description>Recent content in memory on Cloudware</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 30 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/memory/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Linux Memory Forensics on x86_64</title>
      <link>/posts/memory-forensics-on-linux-x86/</link>
      <pubDate>Sat, 30 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/memory-forensics-on-linux-x86/</guid>
      <description>Setup / Prerequisites  Volatility (https://github.com/volatilityfoundation/volatility) LiME (https://github.com/504ensicsLabs/LiME) A Linux machine with an x86_64 Instruction Set  My Setup  Kernel Version: 5.3.0-53-generic Ubuntu 18.04 Instruction Set: x86_64  Introduction Memory Analysis is great for looking at unecryted data that resides on a running program, it is very useful for getting a better sense of how an application works under the hood, and if there are any strings that are useful that are unobfuscated and laying in plain text, as well as open file descriptors that point to complete unencrypted files that where open in the time of the snapshot.</description>
    </item>
    
  </channel>
</rss>